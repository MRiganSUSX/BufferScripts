#!/bin/bash

# This script is used to delete L1 files from the buffer as it fills up.
# It also selects L1 files for sampling.

FILESYSTEM=$1
L1=$2
DONTDELETE=$3
GRIDREADY=$4
MAC=$5
SETPGID=$6

$SETPGID $$
OLDDATE=$(date --utc +%e)
FIRST=1
while true
do

# This part checks whether we need to delete files
  PERCENTFULL=$( df | grep $FILESYSTEM | awk '{print $4}' | sed 's/%//' )
  if [ $PERCENTFULL -lt 90 ]
  then
    echo INFO - Buffer $PERCENTFULL% full
    sleep 60;
  else
    FILE=$(ls $L1 | head -n 1)
    if [ $(ls $DONTDELETE | wc -l) -eq 0 ]
    then
      rm $L1/$FILE;
      echo INFO - Buffer filling up.  Removing file $FILE
    else
      if [ $PERCENTFULL -gt 99 ]
      then
#        rm $L1/$FILE;
#        echo WARNING - Buffer more than 99% full.  Removing file $FILE despite deletion lock!
        echo ERROR - Buffer will soon fill up, but the deletion lock is active!  If you do not take action, it will not be possible to write new data to disk!
      else
        echo WARNING - Buffer more than 90% full but deletion is locked!
      fi
    fi
  fi

# This part selects a prescale file each day
  DATE=$(date --utc +%e)
  if [ $DATE -ne $OLDDATE ]
  then
    OLDDATE=$DATE
    # If this is the first time this has run, pick any file from within the
    # last 24 hours; otherwise, select a file modified since the last such selection
    if [ $FIRST -eq 1 ]
    then
      find -mtime 0 $L1 > $DATE.txt
      FIRST=0
    else
      ls -tr $L1 | sed -n -e '/$OLDFILE/,$p' > $DATE.txt
    fi
    OLDFILE=$(tail -n 1 $DATE.txt)
    FILECOUNT=$(wc -l $DATE.txt)
    RANDFILE=$(head -n $(FILECOUNT-1) $DATE.txt | $BS/buffer/shuf --random-source=/dev/random -n 1)
    mv $RANDFILE $GRIDREADY/L1/$RANDFILE
  fi

done
