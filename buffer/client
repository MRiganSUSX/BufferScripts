#!/bin/bash

# This client script receives newly-built files from the server script
# and (1) writes them out to the Buffer and (2) feeds them to the chopper.
# When the chopper has run to completion, it touches the file filereceived
# on the Buffer to advance the server.  There is a client log that records
# the output of the Chopper as well as statements when files are complete.
# The client also writes a joblog file for each builder file at
# $RUN.chopper.log to record the job numbers associated to that file.

# This script is designed for use with the L2 Master Script.  It can be run
# independently by giving it the arguments listed below:

# Specifying where things are located
BUILDER=$1
PIPE=$2
L1=$3
LOG=$4
CHOPPER=$5
JOBQUEUE=$6
MAC=$7
PASSWORDFILE=$8
GRIDREADY=$9
PCAFILE=~/run.txt

# ATTN: This function must be run in a subshell, e.g., in a pipeline
ourtee()
{
trap "" SIGPIPE
exec tee $*
}

trap exit 2

while true
do
    echo INFO - L2 Client starting
# For each file coming from the builder, first receive the filename
# then, receive the file; finally, write the item into the jobqueue

# Receive and parse filename
    FILE=$(ssh $BUILDER cat $PIPE)
    echo INFO - Receiving file $FILE
    RUN=$( echo $FILE | awk 'BEGIN {FS="_"}{print $3}' )
    cat $RUN > $PCAFILE
    SUBRUN=$( echo $FILE | awk 'BEGIN {FS="_"}{print $4}' )
    BIGFILE=$( echo $FILE | awk 'BEGIN {FS="/"}{print $5}' )
    NAME=$RUN"_"$SUBRUN 
    PASSWORD=$(cat $PASSWORDFILE)
    
# Receive file - try three times, report errors
    TEST=0
    TRIES=0
    while (( TEST == 0 && TRIES < 3))
    do
        ssh $BUILDER cat $PIPE | ourtee -a $L1/$BIGFILE \
                               | $CHOPPER -i /dev/stdin -o $NAME -r $PASSWORD >> $LOG 
        if [$? -gt 0 ]
        then
          TRIES=$( $TRIES + 1)
          echo WARNING - Stonehenge exited on file $FILE.
          if [ $TRIES -lt 3 ]
          then
            echo INFO - Trying to read file $FILE again.
          else
            echo ERROR - Three failures trying to process file $FILE.  Moving on.
          fi
        else
          TEST=1
          echo SUCCESS - Stonehenge finished processing file $FILE successfully.
        fi
    done 

# Report that the file was received
    ssh $BUILDER touch /Users/snotdaq/server/filereceived

# Prepare for conversion
    cat > $MAC/$NAME.mac << EOF

/PhysicsList/OmitAll true

/run/initialize

/rat/proclast outroot
/rat/procset file "$NAME.l2.root"

/rat/inzdab/read $NAME.zdab

exit
EOF

    echo ./job $MAC $RUN_$SUBRUN $NAME.zdab $GRIDREADY >> $JOBQUEUE
    echo SUCCESS - Stonehenge done with run $RUN"_"$SUBRUN

done
