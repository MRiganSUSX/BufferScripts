# This client script receives newly-built files from the server script
# and (1) writes them out to the Buffer and (2) feeds them to the chopper.
# When the chopper has run to completion, it touches the file filereceived
# on the Buffer to advance the server.  There is a client log that records
# the output of the Chopper as well as statements when files are complete.
# The client also writes a joblog file for each builder file at
# $RUN.chopper.log to record the job numbers associated to that file.

#! /bin/bash

# Specifying where to read from
BUILDER=snotdaq@builder1.spdata.snolab.ca
PIPE=/Users/snotdaq/server/pipe
LOG=client.log
DIR=.

# Save the last job in the last file
OLDJOB=0

# ATTN: This function must be run in a subshell, e.g., in a pipeline
ourtee()
{
trap "" SIGPIPE
exec tee $*
}

trap exit 2

while true
do
# For each file coming from the builder, first receive the filename
# then, receive the file; finally, write list of jobs associated to run

    FILE=$(ssh $BUILDER cat $PIPE)
    echo $FILE >> $LOG
    RUN=$( echo $FILE | awk 'BEGIN {FS="_"}{print $3}' )
    BIGFILE=$( echo $FILE | awk 'BEGIN {FS="/"}{print $5}' )
    FOLDER=$( echo $BIFILE | awk 'BEGIN {FS="."}{print $1}' )
    
    mkdir $DIR/$FOLDER

    ssh $BUILDER cat $PIPE | ourtee -a $DIR/$BIGFILE \
                           | ($DIR/chopper -i /dev/stdin -o chopped -c 2 -l 0 -s $FOLDER >> $LOG; ssh $BUILDER touch /Users/snotdaq/server/filereceived ) 

    echo Finished chopping >> $LOG

    JOB=$( ls -tr $DIR/closed/chopped* | tail -n 1 | awk 'BEGIN {FS="_"}{print $2}' )
    JOBLOG=$DIR/$RUN.chopper.log

    for ((j=$OLDJOB+1; j<=$JOB; j++))
    do
        echo $j >> $JOBLOG
    done

    OLDJOB=$JOB

done
